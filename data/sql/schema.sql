CREATE TABLE chaining (id BIGINT AUTO_INCREMENT, mining_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, param VARCHAR(255) NOT NULL, configured TINYINT(1) DEFAULT '0' NOT NULL, started TINYINT(1) DEFAULT '0' NOT NULL, complete TINYINT(1) DEFAULT '0' NOT NULL, process_id BIGINT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX mining_id_idx (mining_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE chaining_link (id BIGINT AUTO_INCREMENT, target_bicluster_id BIGINT NOT NULL, chaining_id BIGINT NOT NULL, chaining_link_type_id BIGINT NOT NULL, INDEX target_bicluster_id_idx (target_bicluster_id), INDEX chaining_id_idx (chaining_id), INDEX chaining_link_type_id_idx (chaining_link_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE chaining_link_destination (id BIGINT AUTO_INCREMENT, chaining_link_id BIGINT NOT NULL, destination_bicluster_id BIGINT NOT NULL, distance DOUBLE(18, 2) NOT NULL, INDEX destination_bicluster_id_idx (destination_bicluster_id), INDEX chaining_link_id_idx (chaining_link_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE chaining_link_type (id BIGINT AUTO_INCREMENT, chaining_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, status_code TINYINT DEFAULT 0 NOT NULL, start_time datetime, end_time datetime, INDEX chaining_id_idx (chaining_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE document_link (id BIGINT AUTO_INCREMENT, mining_id BIGINT NOT NULL, bicluster_id BIGINT NOT NULL, document_id BIGINT NOT NULL, INDEX mining_id_idx (mining_id), INDEX bicluster_id_idx (bicluster_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE entity_frequency (id BIGINT AUTO_INCREMENT, mining_id BIGINT NOT NULL, entity_id BIGINT NOT NULL, entity_name VARCHAR(255) NOT NULL, entity_type VARCHAR(255) NOT NULL, bicluster_count BIGINT NOT NULL, INDEX entity_idx (entity_id), INDEX mining_id_idx (mining_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE feature (id BIGINT AUTO_INCREMENT, complete TINYINT(1) NOT NULL, name VARCHAR(255) NOT NULL UNIQUE, description VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mining (id BIGINT AUTO_INCREMENT, project_id BIGINT NOT NULL, type BIGINT NOT NULL, algorithm BIGINT NOT NULL, name VARCHAR(255) NOT NULL, param VARCHAR(255) NOT NULL, started TINYINT(1) DEFAULT '0' NOT NULL, setup TINYINT(1) DEFAULT '0' NOT NULL, complete TINYINT(1) DEFAULT '0' NOT NULL, process_id BIGINT DEFAULT 0 NOT NULL, document_link_status TINYINT DEFAULT 0 NOT NULL, entity_frequency_status TINYINT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX project_id_idx (project_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mining_bi_cluster (id BIGINT AUTO_INCREMENT, mining_id BIGINT NOT NULL, config_id BIGINT NOT NULL, INDEX mining_id_idx (mining_id), INDEX config_id_idx (config_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mining_bi_cluster_col (id BIGINT AUTO_INCREMENT, bicluster_id BIGINT NOT NULL, col_id BIGINT NOT NULL, INDEX bicluster_id_idx (bicluster_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mining_bi_cluster_row (id BIGINT AUTO_INCREMENT, bicluster_id BIGINT NOT NULL, row_id BIGINT NOT NULL, INDEX bicluster_id_idx (bicluster_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE mining_job_mapping (id BIGINT AUTO_INCREMENT, mining_id BIGINT NOT NULL, config_id BIGINT NOT NULL, status_code TINYINT DEFAULT 0 NOT NULL, start_time datetime, end_time datetime, INDEX mining_id_idx (mining_id), INDEX config_id_idx (config_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE project (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, jigsaw_based TINYINT(1) DEFAULT '0' NOT NULL, external_database VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE project_config (id BIGINT AUTO_INCREMENT, project_id BIGINT NOT NULL, table_a VARCHAR(255) NOT NULL, table_axb VARCHAR(255) NOT NULL, table_b VARCHAR(255) NOT NULL, table_a_id_field VARCHAR(255) NOT NULL, table_b_id_field VARCHAR(255) NOT NULL, table_a_description_field VARCHAR(255) NOT NULL, table_b_description_field VARCHAR(255) NOT NULL, table_axb_table_a_id_field VARCHAR(255) NOT NULL, table_axb_table_b_id_field VARCHAR(255) NOT NULL, INDEX project_id_idx (project_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE visualization (id BIGINT AUTO_INCREMENT, project_id BIGINT NOT NULL, mining_id BIGINT NOT NULL, chaining_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, jsondata LONGTEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX chaining_id_idx (chaining_id), INDEX mining_id_idx (mining_id), INDEX project_id_idx (project_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE chaining ADD CONSTRAINT chaining_mining_id_mining_id FOREIGN KEY (mining_id) REFERENCES mining(id) ON DELETE CASCADE;
ALTER TABLE chaining_link ADD CONSTRAINT chaining_link_target_bicluster_id_mining_bi_cluster_id FOREIGN KEY (target_bicluster_id) REFERENCES mining_bi_cluster(id) ON DELETE CASCADE;
ALTER TABLE chaining_link ADD CONSTRAINT chaining_link_chaining_link_type_id_chaining_link_type_id FOREIGN KEY (chaining_link_type_id) REFERENCES chaining_link_type(id) ON DELETE CASCADE;
ALTER TABLE chaining_link ADD CONSTRAINT chaining_link_chaining_id_chaining_id FOREIGN KEY (chaining_id) REFERENCES chaining(id) ON DELETE CASCADE;
ALTER TABLE chaining_link_destination ADD CONSTRAINT chaining_link_destination_chaining_link_id_chaining_link_id FOREIGN KEY (chaining_link_id) REFERENCES chaining_link(id) ON DELETE CASCADE;
ALTER TABLE chaining_link_destination ADD CONSTRAINT cdmi FOREIGN KEY (destination_bicluster_id) REFERENCES mining_bi_cluster(id) ON DELETE CASCADE;
ALTER TABLE chaining_link_type ADD CONSTRAINT chaining_link_type_chaining_id_chaining_id FOREIGN KEY (chaining_id) REFERENCES chaining(id) ON DELETE CASCADE;
ALTER TABLE document_link ADD CONSTRAINT document_link_mining_id_mining_id FOREIGN KEY (mining_id) REFERENCES mining(id) ON DELETE CASCADE;
ALTER TABLE document_link ADD CONSTRAINT document_link_bicluster_id_mining_bi_cluster_id FOREIGN KEY (bicluster_id) REFERENCES mining_bi_cluster(id) ON DELETE CASCADE;
ALTER TABLE entity_frequency ADD CONSTRAINT entity_frequency_mining_id_mining_id FOREIGN KEY (mining_id) REFERENCES mining(id) ON DELETE CASCADE;
ALTER TABLE mining ADD CONSTRAINT mining_project_id_project_id FOREIGN KEY (project_id) REFERENCES project(id) ON DELETE CASCADE;
ALTER TABLE mining_bi_cluster ADD CONSTRAINT mining_bi_cluster_mining_id_mining_id FOREIGN KEY (mining_id) REFERENCES mining(id) ON DELETE CASCADE;
ALTER TABLE mining_bi_cluster ADD CONSTRAINT mining_bi_cluster_config_id_project_config_id FOREIGN KEY (config_id) REFERENCES project_config(id) ON DELETE CASCADE;
ALTER TABLE mining_bi_cluster_col ADD CONSTRAINT mining_bi_cluster_col_bicluster_id_mining_bi_cluster_id FOREIGN KEY (bicluster_id) REFERENCES mining_bi_cluster(id) ON DELETE CASCADE;
ALTER TABLE mining_bi_cluster_row ADD CONSTRAINT mining_bi_cluster_row_bicluster_id_mining_bi_cluster_id FOREIGN KEY (bicluster_id) REFERENCES mining_bi_cluster(id) ON DELETE CASCADE;
ALTER TABLE mining_job_mapping ADD CONSTRAINT mining_job_mapping_mining_id_mining_id FOREIGN KEY (mining_id) REFERENCES mining(id) ON DELETE CASCADE;
ALTER TABLE mining_job_mapping ADD CONSTRAINT mining_job_mapping_config_id_project_config_id FOREIGN KEY (config_id) REFERENCES project_config(id) ON DELETE CASCADE;
ALTER TABLE project_config ADD CONSTRAINT project_config_project_id_project_id FOREIGN KEY (project_id) REFERENCES project(id) ON DELETE CASCADE;
ALTER TABLE visualization ADD CONSTRAINT visualization_project_id_project_id FOREIGN KEY (project_id) REFERENCES project(id) ON DELETE CASCADE;
ALTER TABLE visualization ADD CONSTRAINT visualization_mining_id_mining_id FOREIGN KEY (mining_id) REFERENCES mining(id) ON DELETE CASCADE;
ALTER TABLE visualization ADD CONSTRAINT visualization_chaining_id_chaining_id FOREIGN KEY (chaining_id) REFERENCES chaining(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
