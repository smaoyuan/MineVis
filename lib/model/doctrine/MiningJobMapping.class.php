<?php

/**
 * MiningJobMapping
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    MineVis
 * @subpackage model
 * @author     Patrick Fiaux
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class MiningJobMapping extends BaseMiningJobMapping {

    private $status_codes = array('Pending', 'Formating Data', 'Runing Algorithm'
        , 'Parsing Results', 'Complete', 'Error');

    /**
     * This returns a status description in words.
     * Right now jsut running or pending but it might be extended to
     * formating input, mining, parsing output saving results
     * @return String status description of job
     */
    public function getStatus() {
        return $this->status_codes[$this->getStatusCode()];
    }

    /**
     * This returns the runtime of the mining job.
     * If it is complete it returns the final run time, if it is not complete
     * it returns the run time so far.
     * @return int runtime of mining job in seconds
     */
    public function getRunTime() {
        if ($this->isDone()) {
            $start = new DateTime($this->getStartTime());
            $end = new DateTime($this->getEndTime());
            //$runtime = $end - $start;
            $runtime = date_diff($start, $end)->format('%a days %h hours %i minutes %s seconds');
            return $runtime;
        } else if ($this->isStarted()) {
            $start = new DateTime($this->getStartTime());
            $end = new DateTime(date('c'));
            $runtime = date_diff($start, $end)->format('%a days %h hours %i minutes %s seconds');
            return $runtime;
        } else {
            return 0;
        }
    }

    /**
     * Check if this job is complete.
     * A job is complete if the mining has finished running.
     * @return Boolean true if complete false if not.
     */
    public function isDone() {
        if ($this->getEndTime() != null) {
            return true;
        }
        return false;
    }

    /**
     * Checks if the job started running yet.
     * @return Boolean true if started false otherwise
     */
    public function isStarted() {
        if ($this->getStartTime() != null) {
            return true;
        }
        return false;
    }

}
