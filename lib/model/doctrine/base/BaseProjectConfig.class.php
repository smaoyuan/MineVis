<?php

/**
 * BaseProjectConfig
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_id
 * @property string $table_a
 * @property string $table_axb
 * @property string $table_b
 * @property string $table_a_id_field
 * @property string $table_b_id_field
 * @property string $table_a_description_field
 * @property string $table_b_description_field
 * @property string $table_axb_table_a_id_field
 * @property string $table_axb_table_b_id_field
 * @property Project $Project
 * @property Doctrine_Collection $MiningJobMappings
 * @property Doctrine_Collection $MiningBiCluster
 * 
 * @method integer             getProjectId()                  Returns the current record's "project_id" value
 * @method string              getTableA()                     Returns the current record's "table_a" value
 * @method string              getTableAxb()                   Returns the current record's "table_axb" value
 * @method string              getTableB()                     Returns the current record's "table_b" value
 * @method string              getTableAIdField()              Returns the current record's "table_a_id_field" value
 * @method string              getTableBIdField()              Returns the current record's "table_b_id_field" value
 * @method string              getTableADescriptionField()     Returns the current record's "table_a_description_field" value
 * @method string              getTableBDescriptionField()     Returns the current record's "table_b_description_field" value
 * @method string              getTableAxbTableAIdField()      Returns the current record's "table_axb_table_a_id_field" value
 * @method string              getTableAxbTableBIdField()      Returns the current record's "table_axb_table_b_id_field" value
 * @method Project             getProject()                    Returns the current record's "Project" value
 * @method Doctrine_Collection getMiningJobMappings()          Returns the current record's "MiningJobMappings" collection
 * @method Doctrine_Collection getMiningBiCluster()            Returns the current record's "MiningBiCluster" collection
 * @method ProjectConfig       setProjectId()                  Sets the current record's "project_id" value
 * @method ProjectConfig       setTableA()                     Sets the current record's "table_a" value
 * @method ProjectConfig       setTableAxb()                   Sets the current record's "table_axb" value
 * @method ProjectConfig       setTableB()                     Sets the current record's "table_b" value
 * @method ProjectConfig       setTableAIdField()              Sets the current record's "table_a_id_field" value
 * @method ProjectConfig       setTableBIdField()              Sets the current record's "table_b_id_field" value
 * @method ProjectConfig       setTableADescriptionField()     Sets the current record's "table_a_description_field" value
 * @method ProjectConfig       setTableBDescriptionField()     Sets the current record's "table_b_description_field" value
 * @method ProjectConfig       setTableAxbTableAIdField()      Sets the current record's "table_axb_table_a_id_field" value
 * @method ProjectConfig       setTableAxbTableBIdField()      Sets the current record's "table_axb_table_b_id_field" value
 * @method ProjectConfig       setProject()                    Sets the current record's "Project" value
 * @method ProjectConfig       setMiningJobMappings()          Sets the current record's "MiningJobMappings" collection
 * @method ProjectConfig       setMiningBiCluster()            Sets the current record's "MiningBiCluster" collection
 * 
 * @package    MineVis
 * @subpackage model
 * @author     Patrick Fiaux
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectConfig extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_config');
        $this->hasColumn('project_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('table_a', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_axb', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_b', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_a_id_field', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_b_id_field', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_a_description_field', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_b_description_field', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_axb_table_a_id_field', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('table_axb_table_b_id_field', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Project', array(
             'local' => 'project_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('MiningJobMapping as MiningJobMappings', array(
             'local' => 'id',
             'foreign' => 'config_id'));

        $this->hasMany('MiningBiCluster', array(
             'local' => 'id',
             'foreign' => 'config_id'));
    }
}